__all__=['', 'RemoveScriptMaps', 'UninstallModule', 'get_unique_items', 'InstallModule', 'AssignScriptMaps', 'LocateWebServerPath', 'split_path', 'MergeStandardOptions', 'FindWebServer', 'AddExtensionFiles', 'HandleCommandLine', 'GetWebServer']
from typing import *
from .win32typing import *
"""Installation utilities for Python ISAPI filters and extensions."""


def RemoveScriptMaps(vd_params:'Any',options:'Any') -> 'None':
    """
    Remove script maps from the already installed virtual directory

Args:

      vd_params(Any):vd_params
      options(Any):options

Returns:

      None
        
    """
    pass
        

def UninstallModule(conf_module_name:'Any',params:'Any',options:'Any',log:'Any') -> 'None':
    """
    Remove the extension

Args:

      conf_module_name(Any):conf_module_name
      params(Any):params
      options(Any):options
      log(Any):log

Returns:

      None
        
    """
    pass
        

def get_unique_items(sequence:'Any',reference:'Any') -> 'None':
    """
    Return items in sequence that can't be found in reference.

Args:

      sequence(Any):sequence
      reference(Any):reference

Returns:

      None
        
    """
    pass
        

def InstallModule(conf_module_name:'Any',params:'Any',options:'Any',log:'Any') -> 'None':
    """
    Install the extension

Args:

      conf_module_name(Any):conf_module_name
      params(Any):params
      options(Any):options
      log(Any):log

Returns:

      None
        
    """
    pass
        

def AssignScriptMaps(script_maps:'Any',target:'Any',update:'Any'='replace') -> 'None':
    """
    Updates IIS with the supplied script map information.

Args:

      script_maps(Any):script_maps
      target(Any):target
      update(Any):updateCommentsscript_maps is a list of ScriptMapParameter objectstarget is an IIS Virtual Directory to assign the script maps toupdate is a string indicating how to update the maps, one of  ('start', 'end', or 'replace')

Returns:

      None
        
    """
    pass
        

def LocateWebServerPath(description:'Any') -> 'None':
    """
    Find an IIS web server whose name or comment matches the provided 

description (case-insensitive).

Args:

      description(Any):descriptionCommentsor&gt&gt&gt LocateWebServerPath('1') #doctest: +SKIP&gt&gt&gt LocateWebServerPath('Default Web Site') # doctest: +SKIP

Returns:

      None
        
    """
    pass
        

def split_path(path:'Any') -> 'None':
    """
    Get the parent path and basename.

Args:

      path(Any):path&gt&gt&gt split_path('/')['', '']&gt&gt&gt split_path('')['', '']&gt&gt&gt split_path('foo')['', 'foo']&gt&gt&gt split_path('/foo')['', 'foo']&gt&gt&gt split_path('/foo/bar')['/foo', 'bar']&gt&gt&gt split_path('foo/bar')['/foo', 'bar']

Returns:

      None
        
    """
    pass
        

def MergeStandardOptions(options:'Any',params:'Any') -> 'None':
    """
    Take an options object generated by the command line and merge 

the values into the IISParameters object.

Args:

      options(Any):options
      params(Any):params

Returns:

      None
        
    """
    pass
        

def FindWebServer(options:'Any',server_desc:'Any') -> 'None':
    """
    Legacy function to allow options to define a .server property 

to override the other parameter.  Use GetWebServer instead.

Args:

      options(Any):options
      server_desc(Any):server_desc

Returns:

      None
        
    """
    pass
        

def AddExtensionFiles(params:'Any',options:'Any') -> 'None':
    """
    Register the modules used by the filters/extensions as a trusted 

'extension module' - required by the default IIS6 security settings.

Args:

      params(Any):params
      options(Any):options

Returns:

      None
        
    """
    pass
        

def HandleCommandLine(params:'Any',argv:'Any'=None,conf_module_name:'Any'=None,default_arg:'Any'='install',opt_parser:'Any'=None,custom_arg_handlers:'Any'={}) -> 'None':
    """
    Perform installation or removal of an ISAPI filter or extension.

Args:

      params(Any):params
      argv(Any):argv
      conf_module_name(Any):conf_module_name
      default_arg(Any):default_arg
      opt_parser(Any):opt_parser
      custom_arg_handlers(Any):custom_arg_handlersCommentsThis module handles standard command-line options and configuration information, and installs, removes or updates the configuration of an ISAPI filter or extension.You must pass your configuration information in params - all other arguments are optional, and allow you to configure the installation process.

Returns:

      None
        
    """
    pass
        

def GetWebServer(description:'Any'=None) -> 'None':
    """
    Load the web server instance (COM object) for a given instance 

or description. 

If None is specified, the default website is retrieved (indicated 

by the identifier 1.

Args:

      description(Any):description

Returns:

      None
        
    """
    pass
        